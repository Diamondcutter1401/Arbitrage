version: "3.9"

services:
  db:
    image: postgres:16
    container_name: arb-db
    environment:
      POSTGRES_USER: arb
      POSTGRES_PASSWORD: arb
      POSTGRES_DB: arb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../sql/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ../sql/indexes.sql:/docker-entrypoint-initdb.d/02-indexes.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U arb -d arb"]
      interval: 10s
      timeout: 5s
      retries: 5

  bot:
    build: 
      context: ..
      dockerfile: ops/Dockerfile
    container_name: arb-bot
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../config:/app/config:ro
      - ../logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import pybot.cfg; print('Bot health check passed')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: arb-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

volumes:
  postgres_data:
  # redis_data:  # Uncomment if using Redis
